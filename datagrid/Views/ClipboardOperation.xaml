<Page
    x:Class="DataGrid.ClipboardOperation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DataGrid"
    xmlns:common="using:syncfusion.demoscommon.winui"
    xmlns:enumextension="using:syncfusion.demoscommon.winui"
    xmlns:core="using:Syncfusion.UI.Xaml.Core"
    xmlns:dataGrid="using:Syncfusion.UI.Xaml.DataGrid"
    xmlns:grid="using:Syncfusion.UI.Xaml.Grids"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <local:EmployeeViewModel x:Key="employeeViewModel"/>
    </Page.Resources>
    <Grid DataContext="{StaticResource employeeViewModel}">
        <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto">
            <common:DemoLayout x:Name="Example1" HeaderText="The data grid provides an interactive support to perform cut, copy, and paste operations by using the CopyOption and PasteOption properties.">
                <common:DemoLayout.Example>
                    <dataGrid:SfDataGrid
                                x:Name="sfDataGrid"
                                Height="500"
                                Margin="5"
                                VerticalAlignment="Top"
                                AllowEditing="True"
                                AllowGrouping="True"
                                AutoExpandGroups="True"
                                AutoGenerateColumns="False"
                                ColumnWidthMode="AutoLastColumnFill"
                                LiveDataUpdateMode="AllowDataShaping"
                                ItemsSource="{Binding Employees}"
                                SelectionMode="{Binding Converter={enumextension:StringToEnumValueConverter IsInversed=True, Type=grid:GridSelectionMode}, Path=SelectedValue, ElementName=cmbSelectionMode}"
                                SelectionUnit="{Binding Converter={enumextension:StringToEnumValueConverter IsInversed=True,Type=grid:GridSelectionUnit}, Path=SelectedValue, ElementName=SelectionUnit}"
                                ShowGroupDropArea="True"
                                ShowRowHeader="True" >
                        <dataGrid:SfDataGrid.Columns>
                            <dataGrid:GridNumericColumn HeaderText="Employee ID" MappingName="EmployeeID" TextAlignment="Right"/>
                            <dataGrid:GridTextColumn HeaderText="Employee Name" MappingName="Name" />
                            <dataGrid:GridTextColumn MappingName="Gender" />
                            <dataGrid:GridDateColumn MappingName="HireDate"
                                    GroupMode="Display"
                                    HeaderText="Hire Date"
                                    TextAlignment="Right" />
                            <dataGrid:GridTextColumn HeaderText="Designation" MappingName="Title" Width="180" />
                            <dataGrid:GridTextColumn HeaderText="Marital Status" MappingName="MaritalStatus" Width="130" />
                            <dataGrid:GridNumericColumn MappingName="Salary" HeaderText="Salary" NumberFormatter="{Binding SystemCurrency,Source={StaticResource employeeViewModel}}" TextAlignment="Right"  Width="140"/>
                        </dataGrid:SfDataGrid.Columns>
                    </dataGrid:SfDataGrid>
                </common:DemoLayout.Example>
                <common:DemoLayout.Options>
                    <StackPanel>
                    <StackPanel>
                        <TextBlock Margin="16,5,5,5" FontWeight="Bold" Text="Options" />
                        <ComboBox
                                x:Name="SelectionUnit"
                                Width="150"
                                Header="SelectionUnit"
                                Margin="16,5,5,5"
                                ItemsSource="{enumextension:EnumToStringValuesExtension Type=grid:GridSelectionUnit}"
                                SelectedIndex="0">                              
                        </ComboBox>
                    </StackPanel>
                        <StackPanel>
                            <ComboBox
                                x:Name="cmbSelectionMode"
                                Width="150"
                                Margin="16,5,5,5"
                                Header="SelectionMode"
                                ItemsSource="{enumextension:EnumToStringValuesExtension Type=grid:GridSelectionMode}"
                                SelectedIndex="3">                                
                            </ComboBox>
                        </StackPanel>
                        <StackPanel>
                        <TextBlock
                                Margin="16,5,5,5"
                                FontSize="12"
                                FontWeight="Bold"
                                Text="Copy Option" />
                            <ListBox x:Name="CopyOptionListBox"
                                 Width="200"
                                 Margin="16,5,5,5"                                  
                                 ItemsSource="{enumextension:EnumToStringValuesExtension Type=grid:GridCopyOptions}"                                 
                                 SelectionMode="Multiple" />
                        </StackPanel>

                        <StackPanel>
                            <TextBlock
                                Margin="16,5,5,5"
                                FontSize="12"
                                FontWeight="Bold"
                                Text="Paste Option" />
                            <ListBox x:Name="PasteOptionListBox"
                                Width="200"
                                Margin="16,5,5,5"                                    
                                ItemsSource="{enumextension:EnumToStringValuesExtension Type=grid:GridPasteOptions}"
                                SelectionMode="Multiple" />
                        </StackPanel>
                    </StackPanel>
                </common:DemoLayout.Options>
                <common:DemoLayout.Xaml>
                    <x:String xml:space="preserve">
    &lt;dataGrid:SfDataGrid
            x:Name=&quot;sfDataGrid&quot;
            Height=&quot;500&quot;
            Margin=&quot;5&quot;
            VerticalAlignment=&quot;Top&quot;
            AllowEditing=&quot;True&quot;
            AllowGrouping=&quot;True&quot;
            AutoExpandGroups=&quot;True&quot;
            AutoGenerateColumns=&quot;False&quot;
            ColumnWidthMode=&quot;AutoLastColumnFill&quot;                                
            LiveDataUpdateMode=&quot;AllowDataShaping&quot;
            SelectionMode=&quot;$(SelectionMode)&quot;
            SelectionUnit=&quot;$(SelectionUnit)&quot;
            ShowGroupDropArea=&quot;True&quot;
            ShowRowHeader=&quot;True&quot; /&gt;
                    </x:String>
                </common:DemoLayout.Xaml>
                <common:DemoLayout.CSharp>
                    <x:String xml:space="preserve">
                    
// C# code Behind
                        
    private void CopyOptionListBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
    {
        var data = (sender as ListBox);
        var selecteditem = data.SelectedItems;
        if (data.SelectedItems != null)
        {
            for (int i = 0; i &lt; selecteditem.Count; i++)
            {
                if (i == 0)
                    this.sfDataGrid.CopyOption = (GridCopyOptions)selecteditem[i];
                else
                    this.sfDataGrid.CopyOption = this.sfDataGrid.GridCopyOptions | (GridCopyOptions)selecteditem[i];
            }
        }
     }
                        

    private void PasteOptionListBox_SelectionChanged(object sender, SelectionChangedEventArgs e)
    {
        var data = (sender as ListBox);
        var selecteditem = data.SelectedItems;
        if (data.SelectedItems != null)
        {
            for (int i = 0; i &lt; selecteditem.Count; i++)
            {
                if (i == 0)
                    this.sfDataGrid.PasteOption = (GridPasteOptions)selecteditem[i];
                else
                    this.sfDataGrid.PasteOption = this.sfDataGrid.GridPasteOptions | (GridPasteOptions)selecteditem[i];
            }
        }
    }                        
                    </x:String>
                </common:DemoLayout.CSharp>
                <common:DemoLayout.Substitutions>
                    <common:DemoLayoutSubstitution
                        Key="SelectionMode"
                        SubstitutionValue="{x:Bind sfDataGrid.SelectionMode, Mode=OneWay}" />
                    <common:DemoLayoutSubstitution
                        Key="SelectionUnit"
                        SubstitutionValue="{x:Bind sfDataGrid.SelectionUnit,Mode=OneWay}" />
                </common:DemoLayout.Substitutions>
            </common:DemoLayout>
        </ScrollViewer>
    </Grid>
</Page>
